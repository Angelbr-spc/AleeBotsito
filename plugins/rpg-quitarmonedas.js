
let handler = async (m, { conn, args }) => {
    let users = global.db.data.users;
    let user = users[m.sender];

    // Verificar que se haya proporcionado la cantidad de monedas a quitar
    if (!args[0] || isNaN(args[0]) || args[0] <= 0) {
        return m.reply("‚ö†Ô∏è ùêèùê®ùê´ ùêüùêöùêØùê®ùê´, ùê¢ùêßùêùùê¢ùêúùêö ùê•ùêö ùêúùêöùêßùê≠ùê¢ùêùùêöùêù ùêùùêû ùê¶ùê®ùêßùêûùêùùêöùê¨ ùê™ùêÆùêû ùêùùêûùê¨ùêûùêöùê¨ ùê™ùêÆùê¢ùê≠ùêöùê´.");
    }

    let cantidadAQuitar = parseInt(args[0]);

    // Verificar que el usuario tenga suficientes monedas
    if (user.monedas < cantidadAQuitar) {
        return m.reply(`üö´ No tienes suficientes monedas. Tienes ${user.monedas} monedas.`);
    }

    // Restar las monedas al usuario
    user.monedas -= cantidadAQuitar;

    // Respuesta al usuario
    await m.reply(`‚úÖ Has quitado ${cantidadAQuitar} monedas. Ahora tienes ${user.monedas} monedas.`);
}

handler.help = ['quitarmonedas <cantidad>'];
handler.tags = ['econom√≠a'];
handler.command = ['quitarmonedas'];

export default handler;